apiVersion: v1
kind: Service
metadata:
  name: elclaustro-strapi-adminer
  namespace: elclaustro-strapi
spec:
  selector:
    app: elclaustro-strapi-adminer
  type: ClusterIP
  # sessionAffinity: None
  # sessionAffinityConfig:
  #   clientIP:
  #     timeoutSeconds: 10800
  ports:
    - name: elclaustro-strapi-adminer
      protocol: TCP
      port: 9090
      targetPort: 8080
      # If you set the `spec.type` field to `NodePort` and you want a specific port number,
      # you can specify a value in the `spec.ports[*].nodePort` field.
      # nodePort:
---
apiVersion: apps/v1
kind: Deployment
# Only schedule pods on nodes with specific hostname "mb-air": nodeSelector: hostname: mb-air
metadata:
  name: elclaustro-strapi-adminer
  namespace: elclaustro-strapi
  labels:
    app: elclaustro-strapi-adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elclaustro-strapi-adminer
  template:
    metadata:
      name: elclaustro-strapi-adminer
      labels:
        app: elclaustro-strapi-adminer
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: "true"
      containers:
        - name: elclaustro-strapi-adminer
          image: adminer # postgres:latest
          # Select only specific node(s) to schedule the pod on:
          resources:
            requests:
              cpu: 0m
              memory: 0Mi
            limits:
              cpu: 500m
              memory: 512Mi
          ports:
            - containerPort: 8080
              name: tcp-adminer
              protocol: TCP
          # Create your configmap using the according template with the following command:
          # kubectl create configmap postgres-config --from-file=deploy/postgres.env
          env:
            - name: ADMINER_DEFAULT_SERVER
              value: elclaustro-strapi-postgres
